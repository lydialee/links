// Generated by CoffeeScript 1.9.1
(function() {
  $(function() {
    var App, AppView, Todo, TodoList, TodoView, Todos;
    Todo = Backbone.Model.extend({
      defaults: function() {
        return {
          title: 'empty todo...',
          done: false,
          order: Todos.nextOrder()
        };
      },
      toggle: function() {
        return this.save({
          done: !this.get('done')
        });
      }
    });
    TodoList = Backbone.Collection.extend({
      model: Todo,
      localStorage: new Backbone.LocalStorage('todos-backbone'),
      done: function() {
        return this.where({
          done: true
        });
      },
      remaining: function() {
        return this.where({
          done: false
        });
      },
      nextOrder: function() {
        if (!this.length) {
          return 1;
        } else {
          return this.last().get('order') + 1;
        }
      },
      comparator: 'order'
    });
    Todos = new TodoList;
    TodoView = Backbone.View.extend({
      tagName: 'li',
      template: _.template($('#item-template').html()),
      events: {
        'click .toggle': 'toggleDone',
        'dbclick .view': 'edit',
        'click a.destroy': 'clear',
        'keypress .edit': 'updateOnEnter',
        'blur .edit': 'close'
      },
      initialize: function() {
        this.listenTo(this.model, 'change', this.render);
        return this.listenTo(this.model, 'destroy', this.remove);
      },
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.$el.toggleClass('done', this.model.get('done'));
        this.input = this.$('.edit');
        return this;
      },
      toggleDone: function() {
        return this.model.toggle();
      },
      edit: function() {
        this.$el.addClass('editing');
        return this.input.focus();
      },
      close: function() {
        var value;
        value = this.input.val();
        if (!value) {
          return this.clear();
        } else {
          this.model.save({
            title: value
          });
          return this.$el.removeClass('editing');
        }
      },
      updateOnEnter: function(e) {
        if (e.keyCode === 13) {
          return this.close();
        }
      },
      clear: function() {
        return this.model.destroy();
      }
    });
    AppView = Backbone.View.extend({
      el: $('#todoapp'),
      statsTemplate: _.template($('#stats-template').html()),
      events: {
        'keypress #new-todo': 'createOnEnter',
        'click #clear-completed': 'clearCompleted',
        'click #toggle-all': 'toggleAllComplete'
      },
      initialize: function() {
        this.input = this.$('#new-todo');
        this.allCheckbox = this.$('#toggle-all')[0];
        this.listenTo(Todos, 'add', this.addOne);
        this.listenTo(Todos, 'reset', this.addAll);
        this.listenTo(Todos, 'all', this.render);
        this.footer = this.$('footer');
        this.main = this.$('#main');
        return Todos.fetch();
      },
      render: function() {
        var done, remaining;
        done = Todos.done().length;
        remaining = Todos.remaining().length;
        if (Todos.length) {
          this.main.show();
          this.footer.show();
          return this.footer.html(this.statsTemplate({
            done: done,
            remaining: remaining
          }));
        } else {
          this.main.hide();
          return this.footer.hide();
        }
      },
      addOne: function(todo) {
        var view;
        view = new TodoView({
          model: todo
        });
        return this.$('#todo-list').append(view.render().el);
      },
      addAll: function() {
        return Todos.each(this.addOne, this);
      },
      createOnEnter: function(e) {
        if (e.keyCode !== 13) {
          return;
        }
        if (!this.input.val()) {
          return;
        }
        Todos.create({
          title: this.input.val()
        });
        return this.input.val('');
      },
      clearCompleted: function() {
        _.invoke(Todos.done(), 'destroy');
        return false;
      },
      toggleAllComplete: function() {
        var done;
        done = this.allCheckbox.checked;
        return Todos.each(function(todo) {
          return todo.save({
            'done': done
          });
        });
      }
    });
    return App = new AppView;
  });

}).call(this);
